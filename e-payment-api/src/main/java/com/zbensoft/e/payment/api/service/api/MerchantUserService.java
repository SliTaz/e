package com.zbensoft.e.payment.api.service.api;

import java.util.List;

import com.zbensoft.e.payment.api.config.spring.securityjwt.JwtAuthenticationResponse;
import com.zbensoft.e.payment.db.domain.ConsumerFamilyCoupon;
import com.zbensoft.e.payment.db.domain.MerchantEmployee;
import com.zbensoft.e.payment.db.domain.MerchantUser;

public interface MerchantUserService {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table gov_user
	 *
	 * @mbg.generated Wed Jun 07 15:37:39 CST 2017
	 */
	int deleteByPrimaryKey(String userId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table gov_user
	 *
	 * @mbg.generated Wed Jun 07 15:37:39 CST 2017
	 */
	int insert(MerchantUser record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table gov_user
	 *
	 * @mbg.generated Wed Jun 07 15:37:39 CST 2017
	 */
	int insertSelective(MerchantUser record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table gov_user
	 *
	 * @mbg.generated Wed Jun 07 15:37:39 CST 2017
	 */
	MerchantUser selectByPrimaryKey(String userId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table gov_user
	 *
	 * @mbg.generated Wed Jun 07 15:37:39 CST 2017
	 */
	int updateByPrimaryKeySelective(MerchantUser record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table gov_user
	 *
	 * @mbg.generated Wed Jun 07 15:37:39 CST 2017
	 */
	int updateByPrimaryKey(MerchantUser record);

	List<MerchantUser> selectPage(MerchantUser record);

	boolean isMerchantUserExist(MerchantUser merchantUser);

	void deleteAll();

	MerchantUser selectByUserName(String userName);

	



	int count(MerchantUser merchantUser);

	JwtAuthenticationResponse login(String userName, String password) throws Exception;

	int updateAmountByPrimaryKey(MerchantUser merchantUser);

	Double queryMerchantBalance(String userName);

	MerchantUser selectByClapId(String username);

	MerchantUser selectByIdNumber(String idNumber);

	int activateByTime(MerchantUser merchantUser);

	Double selectSumBalance();
	
	void deleteAndInsert(MerchantUser merchantUser, MerchantUser merchantNewUser, List<MerchantEmployee> newEmployeeList, List<MerchantEmployee> deleteEmployeeList, List<ConsumerFamilyCoupon> toDBConsumerFamilyCouponList);

	MerchantUser selectByUserId(String merchantUserId);
}